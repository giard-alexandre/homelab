{"ignition":{"version":"3.3.0"},"passwd":{"users":[{"groups":["docker"],"name":"core","passwordHash":"$y$j9T$bXdmkObHL/PFpP64KrGWz.$EVMThc5aG3yc0b9n/686zkMpe7WLoHtqBR4XEaDfqn5"}]},"storage":{"files":[{"path":"/etc/hostname","contents":{"compression":"","source":"data:,fcos%0A"},"mode":420},{"path":"/etc/profile.d/systemd-pager.sh","contents":{"compression":"","source":"data:,%23%20Tell%20systemd%20to%20not%20use%20a%20pager%20when%20printing%20information%0Aexport%20SYSTEMD_PAGER%3Dcat%0A"},"mode":420}]},"systemd":{"units":[{"enabled":true,"name":"docker.service"},{"enabled":true,"name":"containerd.service"},{"dropins":[{"contents":"[Service]\n# Override Execstart in main unit\nExecStart=\n# Add new Execstart with `-` prefix to ignore failure\nExecStart=-/usr/sbin/agetty --autologin core --noclear %I $TERM\nTTYVTDisallocate=no\n","name":"autologin-core.conf"}],"name":"serial-getty@ttyS0.service"},{"contents":"[Unit]\nDescription=Copy ssh keys from github\nAfter=network-online.target\nWants=network-online.target\n[Service]\nUser=core\nTimeoutStartSec=0\nExecStartPre=/usr/bin/echo 'Writing keys to:'\nExecStartPre=/usr/bin/echo ${HOME}/.ssh/authorized_keys.d/github\nExecStart=/usr/bin/curl https://github.com/heuristical.keys -o ${HOME}/.ssh/authorized_keys.d/github --create-dirs\n[Install]\nWantedBy=multi-user.target\n","enabled":true,"name":"github-ssh-keys.service"},{"contents":"[Unit]\nDescription=Qemu Guest Agent Docker Container\nAfter=network-online.target\nWants=network-online.target\nAfter=docker.service\nRequires=docker.service\n[Service]\nTimeoutStartSec=0\nExecStartPre=-/usr/bin/docker rm --force qemu-ga\nExecStart=/usr/bin/docker run --name qemu-ga --privileged --net=host -v /dev:/dev -v /etc/os-release:/etc/os-release:ro docker.io/danskadra/qemu-ga qemu-ga\nExecStop=/usr/bin/docker stop qemu-ga\nRestart=always\nRestartSec=5s\n[Install]\nWantedBy=multi-user.target\n","enabled":true,"name":"docker.qemu-guest-agent.service"},{"contents":"[Unit]\nDescription=Portainer Admin Container\nAfter=docker.service\nRequires=docker.service network.target network-online.target\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\nTimeoutStartSec=0\nExecStartPre=-/usr/bin/docker stop %n\nExecStartPre=-/usr/bin/docker rm %n\nExecStartPre=/usr/bin/docker pull portainer/portainer-ce\nExecStartPre=-/usr/bin/docker volume create portainer_data\n# ExecStart=-/usr/bin/mkdir -p /mnt/shared_nfs/portainer_data\n# https://dbafromthecold.com/2018/05/02/changing-the-location-of-docker-named-volumes/\n# Privileged mode is required for binding to local socket to work due to SELINUX (https://github.com/portainer/portainer/issues/849)\nExecStart=/usr/bin/docker run --privileged=true -d -p 9000:9000 -p 9443:9443 --name %n --restart always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce\nExecStop=/usr/bin/docker stop -t 15 %n\n\n[Install]\nWantedBy=multi-user.target\n","enabled":true,"name":"docker.portainer.service"}]}}
